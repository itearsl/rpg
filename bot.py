from characters import Warrior, Mage
import random
import traceback
import datetime
from vk_api import VkApi
from vk_api.upload import VkUpload
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import data_base
import asyncio

vkToken = "a244f42cfaacef0f2fc24a253e56023acb0b7ab2f4eb92a3d3678774762aa88114969172edf49b9fa00c9"
admin = 243578504
club = 194548161

#–ü–µ—Ä—Å–æ–Ω–∞–∂–∏
characters={

}
# Registration phrases

# –°–æ—Å—Ç–æ—è–Ω–∏—è
state = {
}

condition = {
}


# Init vk_api
vk_session = VkApi(token=vkToken)
longpoll = VkBotLongPoll(vk_session, club)
vk = vk_session.get_api()
upload = VkUpload(vk_session)

#init DB
db = data_base.DB()

async def bot_sycle():
    while True:
        try:
            for event in longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    if event.message.text.lower() == "!help" and event.message.from_id not in condition:
                        peer_id = event.object.message['peer_id']
                        vk.messages.send(
                            random_id=random.randint(1, 10 ** 90),
                            peer_id=peer_id,
                            message="–ö–æ–º–∞–Ω–¥—ã:\n"
                                    "üîπ !–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                        )
                    elif event.message.text.lower() == "!—Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" and event.message.from_id not in condition:
                        peer_id = event.object.message['peer_id']
                        vk.messages.send(
                            peer_id=peer_id,
                            random_id=random.randint(1, 10 ** 90),
                            message="–°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–≤–µ–¥–∏—Ç–µ <–Ω–∏–∫ –∫–ª–∞—Å—Å —Å–∏–ª–∞(—á–∏—Å–ª–æ) –ª–æ–≤–∫–æ—Å—Ç—å(—á–∏—Å–ª–æ) –∏–Ω—Ç–µ–ª–µ–∫—Ç(—á–∏—Å–ª–æ)> —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –¢–æ—á–Ω–æ "
                                    "—Ç–∞–∫ –∂–µ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ, —Ç–æ–ª—å–∫–æ –±–µ–∑ —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã—Ö —Å–∫–æ–±–æ–∫. "
                                    "–£ –≤–∞—Å 7 –æ—á–∫–æ–≤ —á—Ç–æ–±—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Ö –Ω–∞ —Å–∏–ª—É –ª–æ–≤–∫–æ—Å—Ç—å –∏ –∏–Ω—Ç–µ–ª–µ–∫—Ç"
                        )
                        condition[event.message.from_id] = "—Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
                    elif event.message.from_id in condition and condition[event.message.from_id] == "—Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
                        if event.message.text.lower() == "!–≤—ã—Ö–æ–¥":
                            vk.messages.send(
                                random_id=random.randint(1, 10 ** 90),
                                peer_id=event.object.message['peer_id'],
                                message="–ñ–∞–ª—å —á—Ç–æ –º—ã –Ω–µ –ø–æ–∏–≥—Ä–∞–µ–º",
                            )
                            condition.pop(event.message.from_id)
                            continue
                        char = event.message.text.split(" ")
                        if char[1].lower() == '–≤–æ–∏–Ω':
                            characters[event.message.from_id] = Warrior(char[0], int(char[2]), int(char[3]), int(char[4]))
                        elif char[1].lower() == '–º–∞–≥':
                            characters[event.message.from_id] = Mage(char[0], int(char[2]), int(char[3]), int(char[4]))
                        mes = await db.create_character(characters[event.message.from_id], event.message.from_id)
                        vk.messages.send(
                            random_id=random.randint(1, 10 ** 90),
                            peer_id=event.object.message['peer_id'],
                            message=mes,
                        )
                        condition.pop(event.message.from_id)
        except Exception as err:
            with open("err_log.txt", "a") as log:
                log.write("{} {}\n\n".format(traceback.format_exc(), str(datetime.datetime.now())))
            vk.messages.send(
                random_id=random.randint(1,10**90),
                peer_id=admin,
                message=f"–í—ã–ª–µ—Ç",
            )
            condition = {}


async def main():
    bot_cycle_task = asyncio.create_task(bot_sycle())
    await asyncio.gather(bot_cycle_task)

# Download and Upload

if __name__ == '__main__':
    asyncio.run(main())



