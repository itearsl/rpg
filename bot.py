from characters import Warrior, Mage, Rogue
from configure_texts import hero_attack, monster_attack
import monsters
import random
import traceback
import datetime
import configparser
from vk_api import VkApi
from vk_api.upload import VkUpload
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import data_base
import asyncio

path = "config.ini"
config = configparser.ConfigParser()
config.read(path)

vkToken = config.get("Config",'vkToken')
admin = config.get("Config",'admin')
club = config.get("Config",'club')

random_number_message = 10 ** 100


db_len = 14
#–ü–µ—Ä—Å–æ–Ω–∞–∂–∏
characters={

}

# –°–æ—Å—Ç–æ—è–Ω–∏—è
state = {
}

condition = {
}


# Init vk_api
vk_session = VkApi(token=vkToken)
longpoll = VkBotLongPoll(vk_session, club)
vk = vk_session.get_api()
upload = VkUpload(vk_session)

#init DB
db = data_base.DB()



async def load_characters_f():

    """–í—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–∫–∞ –≥–æ–≤–Ω–æ, —è –ø–æ–¥—É–º–∞—é –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ"""

    chars = await db.load_characters()
    for character in chars:
        id_user = character[0]
        if len(character) != db_len:
            print("Error, we have {} elements at database, but normal result {}".format(len(character), db_len))  #WRITE TO LOG TOO!!!!
            continue
        if character[8] == 'Warrior':
            characters[id_user] = Warrior(character[1], int(character[5]), int(character[6]), int(character[7]))
        elif character[8] == 'Mage':
            characters[id_user] = Mage(character[1], int(character[5]), int(character[6]), int(character[7]))
        elif character[8] == 'Rogue':
            characters[id_user] = Rogue(character[1], int(character[5]), int(character[6]), int(character[7]))
        characters[id_user].strength = int(character[5])
        characters[id_user].agility = int(character[6])
        characters[id_user].intelligence = int(character[7])

        list_armor = []

        for i in range(9, 14):
            list_armor.append(int(character[i].split("-")[1]))
        armor = sum(list_armor)
        damage = int(character[9].split("-")[1])

        characters[id_user].damage += damage
        characters[id_user].armor += armor

def vk_mssage(mes, peer_id):
    vk.messages.send(
        random_id = random.randint(1, random_number_message),
        peer_id = peer_id,
        message = mes
    )

gob = monsters.Goblin("–≥–æ–±–ª–∏–Ω", 1)
async def bot_cycle():
    load_characters = True
    while True:
        # try:
            if load_characters == True:
                load_characters = False
                await load_characters_f()
            for event in longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    if event.message.text.lower() == "!help" and event.message.from_id not in condition:
                        condition[event.message.from_id] = "–±–æ–π"
                        peer_id = event.object.message['peer_id']
                        vk.messages.send(
                            random_id=random.randint(1, random_number_message),
                            peer_id=peer_id,
                            message="–ö–æ–º–∞–Ω–¥—ã:\n"
                                    "üîπ !–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                        )
                    elif event.message.text.lower() == "!—Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" and event.message.from_id not in condition:
                        peer_id = event.object.message['peer_id']
                        vk.messages.send(
                            peer_id=peer_id,
                            random_id=random.randint(1, random_number_message),
                            message="–°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–≤–µ–¥–∏—Ç–µ <–Ω–∏–∫ –∫–ª–∞—Å—Å —Å–∏–ª–∞(—á–∏—Å–ª–æ) –ª–æ–≤–∫–æ—Å—Ç—å(—á–∏—Å–ª–æ) –∏–Ω—Ç–µ–ª–µ–∫—Ç(—á–∏—Å–ª–æ)> —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –¢–æ—á–Ω–æ "
                                    "—Ç–∞–∫ –∂–µ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ, —Ç–æ–ª—å–∫–æ –±–µ–∑ —Ç—Ä–µ—É–≥–æ–ª—å–Ω—ã—Ö —Å–∫–æ–±–æ–∫. "
                                    "–£ –≤–∞—Å 7 –æ—á–∫–æ–≤ —á—Ç–æ–±—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏—Ö –Ω–∞ —Å–∏–ª—É –ª–æ–≤–∫–æ—Å—Ç—å –∏ –∏–Ω—Ç–µ–ª–µ–∫—Ç"
                        )
                        condition[event.message.from_id] = "—Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                    elif event.message.text.lower() == "!–º–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂" and event.message.from_id not in condition:
                        mes_char = await db.show_character(event.message.from_id)
                        vk.messages.send(
                            random_id=random.randint(1, random_number_message),
                            peer_id=event.object.message['peer_id'],
                            message=mes_char,
                        )
                    elif event.message.text.lower() == "!—É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" and event.message.from_id not in condition:
                        del_message = await db.delete_character(event.message.from_id)
                        vk.messages.send(
                            random_id = random.randint(1, random_number_message),
                            peer_id = event.object.message["peer_id"],
                            message = del_message,
                        )
                    elif event.message.text.lower() == "!–ø—Ä–µ–¥–º–µ—Ç—ã" and event.message.from_id not in condition and (event.message.from_id == 176803261 or event.message.from_id == admin):
                        vk.messages.send(
                            random_id=random.randint(1, random_number_message),
                            peer_id=event.object.message['peer_id'],
                            message="–º–æ–∂–µ—à—å –Ω–∞—á–∏–Ω–∞—Ç—å(!–≤—ã—Ö–æ–¥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏). –í–≤–æ–¥–∏ –≤ —Ç–∞–∫–æ–º –≤–æ—Ä–º–∞—Ç–µ:"
                                    "<–Ω–∞–∑–≤–∞–Ω–∏–µ lvl —Ç–∏–ø(–æ—Ä—É–∂–∏–µ/–±—Ä–æ–Ω—è) –∑–Ω–∞—á–µ–Ω–∏–µ(—É—Ä–æ–Ω/–∑–∞—â–∏—Ç–∞)>\n"
                                    "–ü—Ä–∏–º–µ—Ä: –º–µ—á 2 –æ—Ä—É–∂–∏–µ 3\n"
                                    "–Ω–∞–¥–µ—é—Å—å —Ç—ã –ø–æ–Ω—è–ª",
                        )
                        condition[event.message.from_id] = "–ø—Ä–µ–¥–º–µ—Ç—ã"
                    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
                    elif event.message.from_id in condition and condition[event.message.from_id] == "—Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
                        if event.message.text.lower() == "!–≤—ã—Ö–æ–¥":
                            vk.messages.send(
                                random_id=random.randint(1, random_number_message),
                                peer_id=event.object.message['peer_id'],
                                message="–ñ–∞–ª—å —á—Ç–æ –º—ã –Ω–µ –ø–æ–∏–≥—Ä–∞–µ–º",
                            )
                            condition.pop(event.message.from_id)
                            continue
                        char = event.message.text.split(" ")
                        if char[1].lower() == '–≤–æ–∏–Ω':
                            characters[event.message.from_id] = Warrior(char[0], int(char[2]), int(char[3]), int(char[4]))
                        elif char[1].lower() == '–º–∞–≥':
                            characters[event.message.from_id] = Mage(char[0], int(char[2]), int(char[3]), int(char[4]))
                        elif char[1].lower() == '—Ä–∞–∑–±–æ–π–Ω–∏–∫':
                            characters[event.message.from_id] = Rogue(char[0], int(char[2]), int(char[3]), int(char[4]))
                        else:
                            vk.messages.send(
                                random_id=random.randint(1, random_number_message),
                                peer_id=event.object.message['peer_id'],
                                message="—Ç–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–µ—Ç –≤ –∏–≥—Ä–µ",
                            )
                            condition.pop(event.message.from_id)
                            continue
                        mes = await db.create_character(characters[event.message.from_id], event.message.from_id)
                        vk.messages.send(
                            random_id=random.randint(1, random_number_message),
                            peer_id=event.object.message['peer_id'],
                            message=mes,
                        )
                        condition.pop(event.message.from_id)
                    elif event.message.from_id in condition and condition[event.message.from_id] == "–ø—Ä–µ–¥–º–µ—Ç—ã":
                        if event.message.text.lower() == "!–≤—ã—Ö–æ–¥":
                            vk.messages.send(
                                random_id=random.randint(1, random_number_message),
                                peer_id=event.object.message['peer_id'],
                                message="–ñ–∞–ª—å —á—Ç–æ –º—ã –Ω–µ –ø–æ–∏–≥—Ä–∞–µ–º",
                            )
                            condition.pop(event.message.from_id)
                            continue
                        item = event.message.text.split(" ")
                        await db.add_item(item)
                        vk.messages.send(
                            random_id=random.randint(1, random_number_message),
                            peer_id=event.object.message['peer_id'],
                            message="–ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω",
                        )
                    elif event.message.from_id in condition and condition[event.message.from_id] == "–±–æ–π":
                        if gob.health <= 0:
                            vk.messages.send(
                                random_id=random.randint(1, random_number_message),
                                peer_id=event.object.message['peer_id'],
                                message="–ú–æ–Ω—Å—Ç—Ä –±—ã–ª –ø–æ–≤–µ—Ä–∂–µ–Ω"
                            )
                            condition.pop(event.message.from_id)
                            continue
                        else:
                            if event.message.text.lower() == "–∞—Ç–∞–∫–∞":
                                hero_damage = characters[event.message.from_id].attack()
                                monster_damage = gob.attack()
                                vk_mssage(hero_attack(gob.name, hero_damage), event.object.message['peer_id'])
                                vk_mssage(monster_attack(gob.name, monster_damage), event.object.message['peer_id'])
                                gob.health -= hero_damage
                                continue



        # except Exception as err:
        #     with open("err_log.txt", "a") as log:
        #         log.write("{} {}\n\n".format(traceback.format_exc(), str(datetime.datetime.now())))
        #     vk.messages.send(
        #         random_id=random.randint(1,10**90),
        #         peer_id=admin,
        #         message="–í—ã–ª–µ—Ç",
        #     )
        #     condition = {}


async def main():
    bot_cycle_task = asyncio.create_task(bot_cycle())
    await asyncio.gather(bot_cycle_task)

if __name__ == '__main__':
    asyncio.run(main())



